### -----------------------------------------------------------------------
### CIP Installation Example

Number of Steps: 6
Duration: 10 - 15 minutes
Pre-Requisites:
	+ working python 3.6 or higher installation
	+ Recorded Future API KEY
	+ Sumo Logic Source HTTPS endpoint
Resources:
	+ some 1 - 2 Gbytes of local space
	+ recommended 2 - 4 Gbytes of memory
Summary Steps:
	+ <repository>/bin/script/envcheck.py
	+ <repository>/bin/script/genconfig.py
	+ <repository>/bin/script/rfslsync.py
	and/or
	+ <repository>/bin/script/rfslfusion.py

### -----------------------------------------------------------------------

1. Clone the Github Repository

prompt> git clone git@github.com:wks-sumo-logic/sumologic-rfsync.git
Cloning into 'sumologic-rfsync'...
Enter passphrase for key 'myuser/mykey': 
remote: Enumerating objects: 866, done.
remote: Counting objects: 100% (563/563), done.
remote: Compressing objects: 100% (382/382), done.
remote: Total 866 (delta 289), reused 446 (delta 174), pack-reused 303
Receiving objects: 100% (866/866), 37.26 MiB | 6.05 MiB/s, done.
Resolving deltas: 100% (421/421), done.

2. Confirm python3 exists and is better than 3.6

prompt> which python3
/usr/local/bin/python3

prompt> python3 --version
Python 3.9.7

3. CD into the bin directory and validate the module install

prompt> cd sumologic-rfsync/bin
prompt> ./envcheck.py 
# Report # 0 Issues

NOTE: If there is an issue, you will see an error message

prompt> ./envcheck.py 
### Issue ### ToFix ### pip3 install doesntexist
# Report # 1 Issues

4. Initialize the configuration file

prompt> <repository>/bin/script/genconfig.py -i

You will be prompted to answer all of the questions. 

NOTE: this creates configuration files in /var/tmp for both lambda scripts and stand alone scripts.
NOTE: this will successfully run on Windows as well as Unix

5. Now, check the values of the configuration file

prompt> <repository>/bin/script/genconfig.py -c <configfile_path>

6. Test out this download process using this configuration file

prompt> <repository>/bin/script/rfslsync.py -v 6 -c /var/tmp/recorded_future.initial.cfg
local_cache_directory: /var/tmp/recorded-future
download: domain          filename: /var/tmp/recorded-future/rf_risklist.domain.csv
using: https://api.recordedfuture.com/v2/domain/risklist?format=csv%2Fsplunk
starting: domain
finished: domain
download: hash            filename: /var/tmp/recorded-future/rf_risklist.hash.csv
using: https://api.recordedfuture.com/v2/hash/risklist?format=csv%2Fsplunk
starting: hash
finished: hash
download: ip              filename: /var/tmp/recorded-future/rf_risklist.ip.csv
using: https://api.recordedfuture.com/v2/ip/risklist?format=csv%2Fsplunk
starting: ip
finished: ip
download: url             filename: /var/tmp/recorded-future/rf_risklist.url.csv
using: https://api.recordedfuture.com/v2/url/risklist?format=csv%2Fsplunk
starting: url
finished: url
download: vulnerability   filename: /var/tmp/recorded-future/rf_risklist.vulnerability.csv
using: https://api.recordedfuture.com/v2/vulnerability/risklist?format=csv%2Fsplunk
starting: vulnerability
finished: vulnerability
publishing: /var/tmp/recorded-future/rf_risklist.domain.csv
source_category: recordedfuture/map/domain
upload_response: 200
source_category: recordedfuture/schema/domain
upload_response: 200
publishing: /var/tmp/recorded-future/rf_risklist.hash.csv
source_category: recordedfuture/map/hash
upload_response: 200
source_category: recordedfuture/schema/hash
upload_response: 200
publishing: /var/tmp/recorded-future/rf_risklist.ip.csv
source_category: recordedfuture/map/ip
upload_response: 200
source_category: recordedfuture/schema/ip
upload_response: 200
publishing: /var/tmp/recorded-future/rf_risklist.url.csv
source_category: recordedfuture/map/url
upload_response: 200
source_category: recordedfuture/schema/url
upload_response: 200
publishing: /var/tmp/recorded-future/rf_risklist.vulnerability.csv
source_category: recordedfuture/map/vulnerability
upload_response: 200
source_category: recordedfuture/schema/vulnerability
upload_response: 200

7. If you have fusion files, then run the fusion downloader to get the fusion files

prompt> <repository>/bin/script/rfslfusion.py -c /var/tmp/recorded_future.initial.cfg

